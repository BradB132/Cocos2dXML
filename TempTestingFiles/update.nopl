
//get the texture that we care about
Pointer scene = scene;
Pointer hero = scene.hero;
Pointer dir = director;
Pointer horizontalJumpSpeed = scene.horizontalJumpSpeed;
Pointer plats = scene.platforms.Nodes;
float platScrollSpeed = 150*dir.dt;

//check if we are attempting to grab
if(!scene.isGripping.value)
{
	if(scene.touchCount.value > 0)
	{
		//hit test the platforms to see if we could grab one
		BOOL successfulGrab = false;
		float heroX = hero.worldPositionX;
		float heroY = hero.worldPositionY;
		for(int i = 0; i < plats.count; i++)
		{
			Pointer plat = plats[i];
			if(plat.hitTest(heroX, heroY))
			{
				successfulGrab = true;
				break;
			}
		}
		
		if(successfulGrab)
		{
			scene.isGripping.setValue(true);
			horizontalJumpSpeed.setValue(0);
		}
	}
	
	//adjust with tilt
	float maxTilt = 2;
	float tiltAmount = 10*scene.accel.gravityX;
	if(tiltAmount > maxTilt)
		tiltAmount = maxTilt;
	else if(tiltAmount < -maxTilt)
		tiltAmount = -maxTilt;
	
	horizontalJumpSpeed.setValue(horizontalJumpSpeed.value+tiltAmount*dir.dt);
}

if(scene.isGripping.value)
{
	//we're grabbing onto a platform
	hero.setPosition((float)hero.positionX, hero.positionY+platScrollSpeed);
}
else
{
	//we're in freefall
	float fallingSpeed = 100*director.dt;
	hero.setPosition(hero.positionX+horizontalJumpSpeed.value, hero.positionY-fallingSpeed);
}

for(int i = 0; i < plats.count; i++)
{
	Pointer plat = plats[i];
	
	float xPos = plat.positionX;
	float yPos = plat.positionY+platScrollSpeed;
	if(plat.positionY >= dir.sizeY)
	{
		xPos = random((float)dir.sizeX);
		yPos %= dir.sizeY;
	}
	
	plat.setPosition(xPos, yPos);
}